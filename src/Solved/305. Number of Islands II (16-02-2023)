class Solution {

       public List<Integer> numIslands2(int m, int n, int[][] positions) {

        int[][] world = new int[m+2][n+2];

        List<Integer> islands = new ArrayList<Integer>();

        int lastIslandCount = 0;

        for(int i = 0;i<positions.length;i++) {

            int x = positions[i][0] + 1;
            int y = positions[i][1] + 1;

            if(world[x][y] == 0) {

            int islandsCount = getNearByIslands(world,m+2,n+2,x,y,i+1);
            lastIslandCount = lastIslandCount - islandsCount + 1;
            islands.add(lastIslandCount);

            }

            else {

             islands.add(islands.get( islands.size() - 1 ));

            }

        }


        return islands;
    }

    public int getNearByIslands(int[][] world,int m,int n,int x,int y,int id){

        int islandsCount = 0;


        world[x][y] = id;

        // top

        if(world[x-1][y] != 0 && world[x+1][y] != id) {

                islandsCount++;
                extendsIsland(world,m,n,x-1,y,id);

        }
        // bottom
        if(world[x+1][y] != 0 && world[x+1][y] != id) {


                islandsCount++;
                extendsIsland(world,m,n,x+1,y,id);


        }
        // left
        if(world[x][y-1] != 0 && world[x][y-1] != id) {

                islandsCount++;
                extendsIsland(world,m,n,x,y-1,id);


        }
        // right
        if(world[x][y+1] != 0 && world[x][y+1] != id) {

                islandsCount++;
                extendsIsland(world,m,n,x,y+1,id);

        }

        return islandsCount;

    }

    private void extendsIsland(int[][] world, int m, int n, int x, int y, int id) {

        world[x][y] = id;

        if(world[x-1][y] != 0 && world[x-1][y] != id) {
            extendsIsland(world,m,n,x-1,y,id);
        }
        if(world[x+1][y] != 0 && world[x+1][y] != id) {
            extendsIsland(world,m,n,x+1,y,id);
        }
        if(world[x][y-1] != 0 && world[x][y-1] != id) {
            extendsIsland(world,m,n,x,y-1,id);
        }
        if(world[x][y+1] != 0 && world[x][y+1] != id) {
            extendsIsland(world,m,n,x,y+1,id);
        }


    }


}